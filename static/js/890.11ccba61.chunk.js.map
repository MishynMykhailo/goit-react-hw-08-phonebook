{"version":3,"file":"static/js/890.11ccba61.chunk.js","mappings":"qNACA,EAAuB,0B,+ECUVA,EAAc,WACzB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,GACvBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAgB,SAAAC,GACpB,MAAwBA,EAAEC,cAAlBX,EAAR,EAAQA,KAAMY,EAAd,EAAcA,MACd,OAAQZ,GACN,IAAK,OACHC,EAAQW,GACR,MACF,IAAK,SACHT,EAAUS,GACV,MACF,QACE,OAEL,EAiBKC,EAAQ,WACZZ,EAAQ,IACRE,EAAU,GACX,EAED,OACE,+BACE,UAACW,EAAA,EAAD,CAAKC,UAAU,OAAOC,SAbJ,SAAAN,GAGpB,OAFAA,EAAEO,iBACFJ,IAXkB,SAAC,GAAsB,IAApBb,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OACrBgB,EAAiBlB,EAAKmB,cAC5B,IAAIf,EAASgB,MAAK,qBAAGpB,KAAgBmB,gBAAkBD,CAArC,IAGhB,OAAOX,EAASc,EAAAA,GAAsB,CAAErB,KAAAA,EAAME,OAAAA,KAF9CoB,EAAAA,OAAAA,QAAA,UAAkBtB,EAAlB,2BAIH,CAKQuB,CAAY,CAAEvB,KAAAA,EAAME,OAAAA,GAC5B,EASkDsB,UAAWC,EAA1D,WACE,SAACC,EAAA,EAAD,CACEC,KAAK,OACL3B,KAAK,OACL4B,MAAM,OACNC,QAAQ,yHACRC,MAAM,yIACNC,SAAUtB,EACVG,MAAOZ,EACPgC,QAAQ,WACRC,aAAa,SAEf,SAACP,EAAA,EAAD,CACEC,KAAK,MACL3B,KAAK,SACL4B,MAAM,SACNG,SAAUtB,EAEVqB,MAAM,kHACNlB,MAAOV,EACP8B,QAAQ,WACRE,GAAI,CAAEC,GAAI,EAAGC,GAAI,GACjBH,aAAa,SAEf,SAACI,EAAA,EAAD,CAAQV,KAAK,SAASK,QAAQ,YAA9B,6BAMP,C,oEClFD,MAAqB,wBAArB,EAAgE,sC,6BC2BhE,EAxBoB,SAAC,GAA4C,IAA1ChC,EAAyC,EAAzCA,KAAME,EAAmC,EAAnCA,OAAQoC,EAA2B,EAA3BA,GAAIC,EAAuB,EAAvBA,iBACvC,OACE,eAAIf,UAAWC,EAAf,UACE,iBAAKD,UAAWC,EAAhB,UACGzB,EADH,KACWE,GACT,SAACmC,EAAA,EAAD,CACEL,QAAQ,WACRQ,QAAS,kBAAMD,EAAiBD,EAAvB,EACTG,WAAW,SAACC,EAAA,EAAD,IAHb,wBAUP,E,wCC8BD,EAxCoB,WAClB,IAAMnC,GAAWC,EAAAA,EAAAA,OACjBmC,EAAAA,EAAAA,YAAU,WACRpC,EAASc,EAAAA,KACV,GAAE,CAACd,IACJ,IAAMH,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,GACvBsC,GAASvC,EAAAA,EAAAA,IAAYwC,EAAAA,GAErBC,EAAiB,SAAAC,GACrBxC,EAASc,EAAAA,GAAyB0B,GACnC,EAQD,OACE,wBARyB,WACzB,IAAMC,EAAmBJ,EAAOzB,cAChC,OAAOf,EAASwC,QAAO,YACrB,OADmC,EAAX5C,KACZmB,cAAc8B,SAASD,EACpC,GACF,CAIIE,GAAqBC,KAAI,YAA2B,IAAxBnD,EAAuB,EAAvBA,KAAME,EAAiB,EAAjBA,OAAQoC,EAAS,EAATA,GACzC,OACE,SAAC,EAAD,CACEtC,KAAMA,EACNE,OAAQA,EAERoC,GAAIA,EACJC,iBAAkBO,GAFbR,EAKV,KAGN,C,yHChBD,EAtBe,WACb,IAAM/B,GAAWC,EAAAA,EAAAA,MACXoC,GAASvC,EAAAA,EAAAA,IAAYwC,EAAAA,GAK3B,OACE,+BACE,SAACnB,EAAA,EAAD,CACEM,QAAQ,WACRL,KAAK,OACL3B,KAAK,SACL4B,MAAM,wBACNhB,MAAOgC,EACPb,SAXe,SAAArB,GACnBH,EAAS6C,EAAAA,GAAqB1C,EAAEC,cAAcC,OAC/C,EAUKsB,GAAI,CAAEC,GAAI,EAAGC,GAAI,MAIxB,C,oGCtBOtC,EAAgBuD,EAAQ,MAAxBvD,YACSwD,EAAgBD,EAAQ,MAAjCE,QACSC,EAAWH,EAAQ,MAA5BE,QAmBR,EAjBqB,WACnB,OACE,iCACE,UAACzC,EAAA,EAAD,CAAKoB,GAAI,CAAEC,GAAI,GAAf,WACE,SAACsB,EAAA,EAAD,CAAYzB,QAAQ,KAAKjB,UAAU,KAAnC,wBAGA,SAACjB,EAAD,QAEF,SAAC2D,EAAA,EAAD,CAAYzB,QAAQ,KAAKjB,UAAU,KAAnC,uBAGA,SAACyC,EAAD,KACA,SAACF,EAAD,MAGL,C,8ECtBD,IAAMT,EAAsB,SAAAa,GAAK,OAAIA,EAAMtD,SAASwC,MAAnB,EAC3BtC,EAAqB,SAAAoD,GAAK,OAAIA,EAAMtD,SAASuD,KAAnB,C,2BCC5BC,EAAyBP,EAAQ,MAKrCQ,EAAQ,OAAU,EAElB,IAAIC,EAAiBF,EAAuBP,EAAQ,OAEhDU,EAAcV,EAAQ,KAEtBW,GAAW,EAAIF,EAAeP,UAAuB,EAAIQ,EAAYE,KAAK,OAAQ,CACpFC,EAAG,kFACD,UAEJL,EAAQ,EAAUG,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx","redux/contacts/contacts-selectors.js","../node_modules/@mui/icons-material/Delete.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport s from '../ContactForm/ContactForm.module.css';\nimport { getItemsValueState } from 'redux/contacts/contacts-selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { Button } from '@mui/material';\nimport * as operations from '../../redux/contacts/contacts-operations';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getItemsValueState);\n  const dispatch = useDispatch();\n\n  const handlerChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const addContacts = ({ name, number }) => {\n    const normalizedName = name.toLowerCase();\n    if (contacts.find(({ name }) => name.toLowerCase() === normalizedName)) {\n      Notify.failure(`${name} is already in contacts`);\n    } else {\n      return dispatch(operations.addContact({ name, number }));\n    }\n  };\n\n  const handlerSumbit = e => {\n    e.preventDefault();\n    reset();\n    return addContacts({ name, number });\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <Box component=\"form\" onSubmit={handlerSumbit} className={s.form}>\n        <TextField\n          type=\"text\"\n          name=\"name\"\n          label=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={handlerChange}\n          value={name}\n          variant=\"standard\"\n          autoComplete=\"off\"\n        />\n        <TextField\n          type=\"tel\"\n          name=\"number\"\n          label=\"Number\"\n          onChange={handlerChange}\n          // pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"The phone number must be 13 digits long and may contain numbers, spaces, dashes, paunches, and may begin with +\"\n          value={number}\n          variant=\"standard\"\n          sx={{ mb: 2, mt: 2 }}\n          autoComplete=\"off\"\n        />\n        <Button type=\"submit\" variant=\"contained\">\n          Add contact\n        </Button>\n      </Box>\n    </>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"li\":\"ContactItem_li__ltr0+\",\"divItemContainer\":\"ContactItem_divItemContainer__PTtWU\",\"button\":\"ContactItem_button__IRFBz\"};","import PropTypes from 'prop-types';\nimport s from '../ContactItem/ContactItem.module.css';\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\nconst ContactItem = ({ name, number, id, onDeleteContacts }) => {\n  return (\n    <li className={s.li}>\n      <div className={s.divItemContainer}>\n        {name}: {number}\n        <Button\n          variant=\"outlined\"\n          onClick={() => onDeleteContacts(id)}\n          startIcon={<DeleteIcon />}\n        >\n          Delete\n        </Button>\n      </div>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.any,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteContacts: PropTypes.func,\n};\n\nexport default ContactItem;\n","import PropTypes from 'prop-types';\nimport ContactItem from '../ContactItem/ContactItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getFilterValueState,\n  getItemsValueState,\n} from 'redux/contacts/contacts-selectors';\nimport * as operations from '../../redux/contacts/contacts-operations';\nimport { useEffect } from 'react';\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(operations.fetchContact());\n  }, [dispatch]);\n  const contacts = useSelector(getItemsValueState);\n  const filter = useSelector(getFilterValueState);\n\n  const deleteContacts = contactsId => {\n    dispatch(operations.deleteContact(contactsId));\n  };\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) => {\n      return name.toLowerCase().includes(normalizedFilter);\n    });\n  };\n\n  return (\n    <ul>\n      {getVisibleContacts().map(({ name, number, id }) => {\n        return (\n          <ContactItem\n            name={name}\n            number={number}\n            key={id}\n            id={id}\n            onDeleteContacts={deleteContacts}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onDeleteContacts: PropTypes.func,\n};\n\nexport default ContactList;\n","import { useDispatch, useSelector } from 'react-redux';\nimport * as actions from '../../redux/contacts/contacts-actions';\nimport { getFilterValueState } from 'redux/contacts/contacts-selectors';\nimport TextField from '@mui/material/TextField';\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilterValueState);\n\n  const changeFilter = e => {\n    dispatch(actions.changeFilter(e.currentTarget.value));\n  };\n  return (\n    <>\n      <TextField\n        variant=\"outlined\"\n        type=\"text\"\n        name=\"filter\"\n        label=\"Find contacts by name\"\n        value={filter}\n        onChange={changeFilter}\n        sx={{ mb: 2, mt: 2 }}\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import { Box, Typography } from '@mui/material';\n\nconst { ContactForm } = require('components/ContactForm');\nconst { default: ContactList } = require('components/ContactList');\nconst { default: Filter } = require('components/Filter');\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <Box sx={{ mb: 4 }}>\n        <Typography variant=\"h6\" component=\"h2\">\n          Phonebook\n        </Typography>\n        <ContactForm />\n      </Box>\n      <Typography variant=\"h6\" component=\"h2\">\n        Contacts\n      </Typography>\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\nexport default ContactsPage;\n","const getFilterValueState = state => state.contacts.filter;\nconst getItemsValueState = state => state.contacts.items;\nexport { getFilterValueState, getItemsValueState };\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;"],"names":["ContactForm","useState","name","setName","number","setNumber","contacts","useSelector","getItemsValueState","dispatch","useDispatch","handlerChange","e","currentTarget","value","reset","Box","component","onSubmit","preventDefault","normalizedName","toLowerCase","find","operations","Notify","addContacts","className","s","TextField","type","label","pattern","title","onChange","variant","autoComplete","sx","mb","mt","Button","id","onDeleteContacts","onClick","startIcon","Delete","useEffect","filter","getFilterValueState","deleteContacts","contactsId","normalizedFilter","includes","getVisibleContacts","map","actions","require","ContactList","default","Filter","Typography","state","items","_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"sourceRoot":""}