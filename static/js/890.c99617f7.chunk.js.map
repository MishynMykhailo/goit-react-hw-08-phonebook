{"version":3,"file":"static/js/890.c99617f7.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx","redux/contacts/contacts-selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport s from '../ContactForm/ContactForm.module.css';\nimport { getItemsValueState } from 'redux/contacts/contacts-selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as operations from '../../redux/contacts/contacts-operations';\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getItemsValueState);\n  const dispatch = useDispatch();\n\n  const handlerChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const addContacts = ({ name, number }) => {\n    const normalizedName = name.toLowerCase();\n    if (contacts.find(({ name }) => name.toLowerCase() === normalizedName)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      return dispatch(operations.addContact({ name, number }));\n    }\n  };\n\n  const handlerSumbit = e => {\n    e.preventDefault();\n    reset();\n    return addContacts({ name, number });\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handlerSumbit} className={s.form}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handlerChange}\n          value={name}\n        />\n      </label>\n      <label className={s.label}>\n        number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          onChange={handlerChange}\n          // pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"The phone number must be 13 digits long and may contain numbers, spaces, dashes, paunches, and may begin with +\"\n          value={number}\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add contact{' '}\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"li\":\"ContactItem_li__ltr0+\",\"divItemContainer\":\"ContactItem_divItemContainer__PTtWU\",\"button\":\"ContactItem_button__IRFBz\"};","import PropTypes from 'prop-types';\nimport s from '../ContactItem/ContactItem.module.css';\nconst ContactItem = ({ name, number, id, onDeleteContacts }) => {\n  return (\n    <li className={s.li}>\n      <div className={s.divItemContainer}>\n        {name}: {number}\n        <button\n          type=\"button\"\n          className={s.button}\n          onClick={() => onDeleteContacts(id)}\n        >\n          Delete\n        </button>\n      </div>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.any,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteContacts: PropTypes.func,\n};\n\nexport default ContactItem;\n","import PropTypes from 'prop-types';\nimport ContactItem from '../ContactItem/ContactItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getFilterValueState,\n  getItemsValueState,\n} from 'redux/contacts/contacts-selectors';\nimport * as operations from '../../redux/contacts/contacts-operations';\nimport { useEffect } from 'react';\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(operations.fetchContact());\n  }, [dispatch]);\n  const contacts = useSelector(getItemsValueState);\n  const filter = useSelector(getFilterValueState);\n  const deleteContacts = contactsId => {\n    dispatch(operations.deleteContact(contactsId));\n  };\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) => {\n      return name.toLowerCase().includes(normalizedFilter);\n    });\n  };\n\n  return (\n    <ul>\n      {getVisibleContacts().map(({ name, number, id }) => {\n        return (\n          <ContactItem\n            name={name}\n            number={number}\n            key={id}\n            id={id}\n            onDeleteContacts={deleteContacts}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onDeleteContacts: PropTypes.func,\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch, useSelector } from 'react-redux';\nimport s from '../Filter/Filter.module.css';\nimport * as actions from '../../redux/contacts/contacts-actions';\nimport { getFilterValueState } from 'redux/contacts/contacts-selectors';\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilterValueState);\n\n  const changeFilter = e => {\n    dispatch(actions.changeFilter(e.currentTarget.value));\n  };\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={changeFilter}\n        className={s.input}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","const { ContactForm } = require('components/ContactForm');\nconst { default: ContactList } = require('components/ContactList');\nconst { default: Filter } = require('components/Filter');\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\nexport default ContactsPage;\n","const getFilterValueState = state => state.contacts.filter;\nconst getItemsValueState = state => state.contacts.items;\nexport { getFilterValueState, getItemsValueState };\n"],"names":["ContactForm","useState","name","setName","number","setNumber","contacts","useSelector","getItemsValueState","dispatch","useDispatch","handlerChange","e","currentTarget","value","reset","onSubmit","preventDefault","normalizedName","toLowerCase","find","operations","alert","addContacts","className","s","type","pattern","title","required","onChange","id","onDeleteContacts","onClick","useEffect","filter","getFilterValueState","deleteContacts","contactsId","normalizedFilter","includes","getVisibleContacts","map","actions","require","ContactList","default","Filter","state","items"],"sourceRoot":""}